---Building the MATLAB Scripting Extension---
1. Checkout source code and set %MATLABDEPENDENCIES%, %OPTICKS_CODE_DIR%, %OPTICKS_HOME%, and %OPTICKSDEPENDENCIES% environment variables
2. Run retrieve-dependencies.bat from the %MATLABDEPENDENCIES% directory
3. Gather the MATLAB SDK from your MATLAB installation (assume MATLAB is installed at %MATLAB_HOME% where <version> is R20XX[a|b] and <arch> is 32 or 64)
   a. Copy %MATLAB_HOME%/<version><arch>bit/extern/include/* to %MATLABDEPENDENCIES%/<arch>/include/MATLAB/<version>
   b. Copy %MATLAB_HOME%/<version><arch>bit/extern/lib/win<arch>/microsoft/* to %MATLABDEPENDENCIES%/<arch>/lib/MATLAB/<version>
4. Open MATLAB.sln (or run build-MATLAB.py) and build as normal.
   - For the .sln, you may need to enable/disable different projects via the Configuration Manager based on which versions of MATLAB you have installed.
   - For the .sln, you need to build MatlabMgr before debugging/running the project from Visual Studio (this only needs to be done once and is equivalent to the --prep argument in the script).
   - If the version of MATLAB you are building against does not yet exist, add a project for it as follows:
      a. Add a VS property sheet at Code/CompileSettings/matlab-<version>.props (copy an existing property sheet as a template).
      b. Add a VS project to Code/MatlabInterpreter/MatlabInterpreter<version>.[vcxproj|vcxproj.filters|vcxproj.filters.user] (using an existing project as a template).
      c. Add the new project to the solution file Code/MATLAB.sln.
      d. Add the new version to the build-MATLAB.py script (both as a build option and to be included in the AEB).
